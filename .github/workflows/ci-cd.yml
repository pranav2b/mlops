name: CI/CD Pipeline for Iris Classifier

on:
  push:
    branches: [ "main" ]

jobs:
  lint:
    name:  Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Lint with flake8
        run: |
          # Run flake8 to check for code quality issues
          flake8 src/

  build-and-push:
    name: Build and Push Docker Image
    needs: lint # This job runs only if the 'lint' job succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/iris-mlops-api:latest

  deploy:
    name: Deploy to Server (Simulation)
    needs: build-and-push # This job runs only after the image is pushed
    runs-on: ubuntu-latest
    steps:
      - name: "Deploying to server"
        run: |
          echo "This is a simulated deployment."
          echo "In a real environment, you would use SSH to connect to a server and run the following commands:"
          echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/iris-mlops-api:latest"
          echo "docker stop iris-api || true"
          echo "docker rm iris-api || true"
          echo "docker run -d -p 8000:8000 --name iris-api ${{ secrets.DOCKERHUB_USERNAME }}/iris-mlops-api:latest"